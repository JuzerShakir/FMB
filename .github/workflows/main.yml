# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: CI

on:
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]

jobs:
    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:11-alpine
                ports: ["5432:5432"]
                # env:
                #     POSTGRES_DB: fmb_test
                #     POSTGRES_USER: rails
                #     POSTGRES_PASSWORD: password
        # env:
        #     RAILS_ENV: test
        #     DATABASE_URL: "postgres://rails:password@localhost:5432/fmb_test"
        steps:
              uses: actions/checkout@v3

            - name: Setup Ruby
              uses: ruby/setup-ruby@v1.138.0
              with:
                  ruby-version: 3.1.2

            - name: Install Dependencies
            - run:
                sudo apt install -yqq libpq-dev
                gem install bundler

            - name: Install Gems
            - run:
                bundle install

            - name: Prepare Database
            - run:
                bundle exec rails db:setup

            - name: Run tests
              env:
                DATABASE_URL: postgres://postgres:@localhost:5432/fmb_test
              run:
                rspec

    # lint:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v3
    #         - name: Install Ruby and gems
    #           uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
    #           with:
    #               bundler-cache: true
    #         # Add or replace any other lints here
    #         - name: Security audit dependencies
    #           run: bin/bundler-audit --update
    #         - name: Security audit application code
    #           run: bin/brakeman -q -w2
    #         - name: Lint Ruby files
    #           run: bin/rubocop --parallel
